#!/usr/bin/env php
<?php

const PACKAGES_DIRECTORY = __DIR__ . '/../packages/';

function getPackagePathFromComposerFile(string $composerFile): string
{
    return str_replace(PACKAGES_DIRECTORY, '', $composerFile);
}

function getPackageNameFromComposerFile(string $composerFile)
{
    $composer = json_decode(file_get_contents($composerFile), true);
    $name = $composer['name'] ?? throw new UnexpectedValueException(
        'The referenced package is invalid because it is missing a name: ' . $composerFile
    );

    return str_replace('ecotone/', '', $name);
}

/**
 * @return array<array-key, array{path: string, name: string}>
 */
function getPackages(): array {
    $packages = [];
    $directoryIterator = new DirectoryIterator(realpath(PACKAGES_DIRECTORY));

    /**
     * @var DirectoryIterator $directory
     */
    foreach ($directoryIterator as $directory) {
        if ($directory->isDot()) {
            continue;
        }

        $file = $directory->getRealPath() . DIRECTORY_SEPARATOR . 'composer.json';
        if (!file_exists($file)) {
            continue;
        }

        $packages[] = [
            'directory'  => $directory->getRealPath(),
            'path' => getPackagePathFromComposerFile($file),
            'name' => getPackageNameFromComposerFile($file),
        ];
    }

    return $packages;
}

echo json_encode(getPackages());